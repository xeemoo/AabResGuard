apply plugin: 'maven-publish'

tasks.register('sourcesJar', Jar) {
    from sourceSets.main.java.srcDirs
    dependsOn classes
    archiveClassifier = 'sources'
    archiveVersion = versions[ARTIFACT_ID]
}

tasks.register('javadocJar', Jar) {
    dependsOn javadoc
    archiveClassifier = 'javadoc'
    from javadoc.destinationDir
    archiveVersion = versions[ARTIFACT_ID]
}

def releasesRepoUrl = System.getProperty("RELEASE_REPOSITORY_URL")
def snapshotsRepoUrl = System.getProperty("SNAPSHOT_REPOSITORY_URL")
def publishUrl = versions[ARTIFACT_ID].endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
def publishUserName = System.getProperty("NEXUS_USERNAME")
def publishPassword = System.getProperty("NEXUS_PASSWORD")

println "-------publish info---------"
println "url: $publishUrl"
println "username: $publishUserName"
println "password: $publishPassword"

apply plugin: 'maven-publish'

def pomConfig = {
    licenses {
        license {
            name "The Apache Software License, Version 2.0"
            url "http://www.apache.org/licenses/LICENSE-2.0.txt"
            distribution "repo"
        }
    }
    developers {
        developer {
            id bintrayInfo.developer.id
            name bintrayInfo.developer.name
            email bintrayInfo.developer.email
        }
    }
    scm {
        url bintrayInfo.repo.siteUrl
    }
}

publishing {
    publications {
        MyPublication(MavenPublication) { publication ->
            project.shadow.component(publication)
            groupId GROUP_ID
            artifactId ARTIFACT_ID
            version versions[ARTIFACT_ID]

            artifact sourcesJar
            artifact javadocJar

            pom.withXml {
                def root = asNode()
                root.appendNode('description', bintrayInfo.repo.description)
                root.appendNode('name', bintrayInfo.repo.name)
                root.appendNode('url', bintrayInfo.repo.siteUrl)
                root.children().last() + pomConfig
            }
        }
    }

    if (!System.getProperty("uploadToBintray", "false").equalsIgnoreCase("true")) {
        repositories {
            maven {
                url = publishUrl
                credentials {
                    username = publishUserName
                    password = publishPassword
                }
            }
        }
    }
}

apply from: "$rootDir/gradle/publish-bintray.gradle"
